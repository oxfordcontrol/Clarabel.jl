# -------------------------------------
# Enum and dict for user interface
# -------------------------------------
"""
    SupportedCone
An abstract type use by the Clarabel API used when passing cone specifications to the solver [`setup!`](@ref).
The currently supported concrete types are:

* `ZeroConeT`       : The zero cone.  Used to define equalities.
* `NonnegativeConeT`: The nonnegative orthant.
* `SecondOrderConeT`: The second order / Lorentz / ice-cream cone.
* `PSDTriangleConeT`: The positive semidefinite cone (triangular format).
* `ExponentialConeT`:         The exponential cone (in R^3)
* `PowerConeT`      : The power cone with power α (in R^3)

"""
abstract type SupportedCone end

struct ZeroConeT <: SupportedCone
    dim::DefaultInt
end

struct NonnegativeConeT <: SupportedCone
    dim::DefaultInt
end

struct SecondOrderConeT <: SupportedCone
    dim::DefaultInt
end

struct PSDTriangleConeT <: SupportedCone
    dim::DefaultInt
end

struct ExponentialConeT <: SupportedCone
    #no fields, #dim = 3 always
end

struct PowerConeT <: SupportedCone
    #dim = 3 always
    α::DefaultFloat
end

# this reports the number of slack variables that
# will be generated by this cone.  Equivalent to
# `numel` for the internal cone representation

function nvars(cone:: SupportedCone)

    if isa(cone, PSDTriangleConeT)
        triangular_number(cone.dim)
    elseif isa(cone, ExponentialConeT)
        3
    elseif isa(cone, PowerConeT)
        3
    else
        cone.dim
    end
end
